[CSS]
1. 개요
  - Cascading Style Sheets
  - 웹 문서를 구성하는 구성요소에 스타일을 적용하거나 레이아ㅏ웃을 설정하는 일을 담당
  - 기존 웹 사이트에 적용된 CSS를 없애는 방법(개발자도구에서만 적용)
    document.head.parentNode.removeChild(document.head)
  - HTML, CSS, javascript를 각각 독깁된 파일로 관리하는 것이 일반적

2. CSS를 사용하는 방법
   선택자{
        속성1:속성값1;
        속성2:속성값2 ...
    }
    
   -1 선택자 - 태그, class, id, 가상클래스, 가상의 컨텐츠, 속성....
             HTML내에서 어떤 컨텐츠에 css를 적용할 것인지 정의할 목적
             
   1)<head>택그 안에 정의하고 사용하는 방법
     <style>
     선택자{
        속성1:속성값1;
        속성2:속성값2 ...
    }
    .....
    .....
     </style>
     
   2)inline으로 선언하고 사용
     - 태그 내부에 style속성에 정의하고 사용
     <시작태그 style="속성1:속성값1; 속성2:속성값2 ......">내용</종료태그> 
     
   3)외부파일로 작성하고 연결해서 작성하는 방법
     <link rel="stylesheet" type="text/css" href="../common/css/mystyle.css">
           ---------------        --------  --------------------------------
           현재 연결된 문서가         브라우저가           연결할 문서의 path(이미지, 하이퍼링크와 동일)
           어떤 것과 연관이 있는지     해석할 수 있도록       
           명시                    response되는
                                  데이터의 타입을
                                  정확하게 명시
   
3. CSS의  선택자
   1)전체선택자
     *
     => 모든 요소 선택
   2)태그선택자
     1.태그명
       태그명{
         속성: 속성값
         .......
      }
      => 정의한 태그를 모두 선택해서 속성을 적용
     2.태그명, 태그명....
       여러 태그에 동일한 서식을 적용하기 위해서
       태그명1, 태그명2{
       	속성: 속성값
       	......
       
       }
   3)class선택자
     .class속성명{
         속성: 속성값
         .....
     }
     -정의한 class속성명에 해당하는 요소만 속성을 적용
     -class속성은 모든 태그에서 정의하고 사용할 수 있는 속성
     -중복해서 정의가 가능
     - 동일한 서식을 태그와 상관없이 여러 곳에 정의할때 사용
   4)id선택자
     -식별하기 위해서 사용하는 선택자이므로 한 페이지에 동일한 id는 정의하지 않는다.
     -javascript나 jQurey에서 많이 사용
     -모든 태그에서 사용할 수 있는 속성인 id속성을 정의하고 사용
     -css에서는 #을 이용해서 정의
     
     #id명{
     	속성: 속성값
     	....
     }
   5)복삽구성 선택자
     1.태그명클래스명(태그명#id명)
     아래 두 개의 조건을 모두 만족하는 요소를 선택
       태그명.클래스명{
           속성: 속성값
           ....
       }
       
       ex)
       div.test{
       
       }
       
       => div태그 중에서 test라는 이름으로 class속성이 정의된 요소를 선택
       
     2.선택자 > 선택자2
       -선택자1의 자식요소 선택자2를 선택
       ex) ul > .mycontent{
				
			  }
       mycontent라는 class명으로 정의된 ul의 하위요소를 선택
     
	   [질문]
	   
	   div > .mycontent{
	   
	   }
	   
	   라면?
	   css_selector_test1.html의 jsp가 선택됨
	   
	 3.선택자1 선택자2
	   -선택자1의 하위요소인 선택자2를 선택
	   -띄어쓰기가 구분기호 
	   -선택자1의 모든 하위요소를 선택
	   
	   [질문]
	   
	   div .mycontent{
	   
	   }  
   	   이것도 가능? => 가능하다
   	   mycontent라는 이름으로 클래스 속성이 정의된 div요소의 모든 하위요소를 선택
   	   
   	 4.선택자1 + 선택자2
   	   -형제요소를 선택해기 위한 방법
   	   -선택자1의 바로 다음  형제요소인 선택자2를 선택
   	   .java + li{
				color: red;
			}
       => java라는 클래스 속성으로 정의된 요소의 다음 형제요소인 li를  선택
       
     5.선택자1 ~ 선택자2
       -형제요소를 선택하기 위한 방법
       -선택자1의 다음 형제요소중 선택자2에 해당하는 모든 요소를 선택
       .java ~ li{
				color: red;
			}
	   => java라는 클래스 속성으로 정의된 요소의 다음 형제요소중 li를 모두 선택 
  6)가상선택자
    -어떤 상태가 발생했을때를 선택자로 활용하는 경우 사용
    -선택자:상태
    1.a:link
      -a태그에서 링크가 걸려있는 상태
    2.a:visited
      -a태그를 사용하며 링크로 방문을 한 후 상태
    3.선택자:hover
      -마우스 포인터를 올려놓는 상황(a태그가 아니라도 사용가능)
      -마우스 포인터가 올라가 있는 동안의 상태를 선택자로 활용 
    4.선택자:active
      -마우스로 요소를 선택하고 있는 동안을 선택자로 활용
      -마우스 선택을 계속 유지하는 동안을 의미
    5.선택자:first-child
      =>선택자가 첫번째 자식요소이면 선택
    6.선택자:last-child
      =>선택자가 마지막 자식요소이면 선택
    7.선택자:nth-child(n)
      -n은 0번부터 시작
      -요수는 첫 번째 요소가 1
  7)속성선택자
    -태그의 속성을 선택자로 이용할 수 있다.'
    [속성]
    => 속성을 포함하고 있는 모든 요소를 선택
    [속성="값"]
    =>속성을 포함하고 있는 모든 요소의 속성값이 일치하는 것을 선택
      
4. 기본속성
5. 텍스트관련 속성
6. 테이블관련 속성
7. 박스모델
8. 포지셔닝
9. 플로팅
10. 레이아웃