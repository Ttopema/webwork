jQuery
  -자바스크립트로 만들어진 라이브러리(프레임워크처럼 쓰인다.)
  -DOM을 쉽게 사용할 수 있도록 지원
  -크로스브라우징을 구현
   ----------
   모든 브라우저에서 동일한 화면을 볼 수 있도록 구성
   
   
1.기능
  -DOM
   :DOM객체의 필수 속성, 메소드, 노드제어, css제어
   
  -Ajax
  -플러그인
   :필요한 기능이 미리 만들어져서 제공되는 것(jQuery로 만들어진 완제품)
   
  -Effect
   :애니메이션 효과
   
2.jQuery사용방법
  1)라이브러리 파일을 다운로드 받아서 프로젝트에 추가하고 작업
  2)CDN방식
    -외부사이트에서 공유한 jQuery라이브러리 경로를 추가해서 작업

3.jQuery
  1)jQuery의 시작
    -ready gandler를 이용해서 작업
    -자바스크립트이므로 <script> 태그 내에서 작업
    -jQuery는 자바스크립트로 만들어진 라이브러리이므로 자바스크립트 문법을 그대로 사용하면서 jQuery에서 제공되는 메소드나 속성을 사용
    
    $(document).ready(function(){
    	//DOM객체가 만들어지고 페이지가 로딩되면 익명의 함수를 실행
    	==>window.onload = function(){
    	
    	
    	}
    })
    
  2)일반적인 jQuery의 문법
    $("선택자").동작()
    -  -----  -----
    jQuery를 의미
    jQuery의 약식기호
       
       css와 동일: html의 구성요소를 가져오기 위해 정의(tag명, class속성, id속성...)
       
              jQuery의 js파일에 미리 정의되어 있는 실행을 할 수 있는 기능
          
    ==> 무엇을 어떻게
        ----- -----
        선택자  동작(메소)
              이베늩와 함께 정의
              
              
4.선택자
  -$(객체)
  -$("*") : DOM객체의 모든 요소에 적용
  -$("#id명") : id속성으로 정의한 요소에 적용
  -$(".class명") : class속성으로 정의한 요소에 적용
  -$("태그명") : 해당 태그 속성으로 정의한 요소에 적용
  -$(this) : 현재 작업중인 객체에 적용
  -$("선택자1 선택자2") : 선택자1의 하위선택자2
    ex) $("div h1") : div태그 하위 태그인 h1을 선택
    
    
  -$("선택자1:first") : 문서내에서 정의한 선택자1중 첫번째 요소
  -$("선택자1 선택자2:first") : 문서내에서 정의한 선택자1의 하위선택자2 중 첫번째 요소
        					 중복되는 것이 있으면 첫 번째 만나는 요소만 선택
  -$("선택자1 선택자2:first-child") : 문서내에서 정의한 선택자1의 하위선택자2 중 첫번째 자식노드에 해당하는 것만 선택
   								   중복되는 것이 있으면 모두 선택
   								   
  -$("[속성명]") : 정의된 속성을 가지고 있는 요소를 모두 선택
  -$("태그명[속성명=속성값]") : 정의된 태그의 속성명과 석성값이 일치하는 요소를 모두 선택
  -$(":input태그의 type속성") : 해당 type으로 정의된 form의 요소가 선택
                              html5 요소도 적용
                              ex) $(":button")
                              <input type="button">태그와 <button></button>태그가 모두 선택
  
  
5.이벤트
  1)on메소드
    $(선택자).on(이벤트명, 함수)
    =>이벤트가 발생하면 함수를 실행
    이벤트명: click, keyup, chage, mouesover....
    
6.값 가져오기 / 값 설정하기
  1)양식태그 중 <input>태그에 입력한 값을 읽어오기
    =>val() ==> getter
    
  2)<input>태그에 값을 설정하기
    val(설정할 값)  ==> setter
    
  3)div태그나 span태그 내부의 텍스트를 추가하는 경우
    text(추가할 값) ==> setter
    
  4)div태그나 span태그 내부의 텍스트를 읽어오는 경우
    text() ==> getter
    
    
       
       
       